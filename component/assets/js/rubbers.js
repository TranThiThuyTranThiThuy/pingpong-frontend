document.addEventListener("DOMContentLoaded", () => {
    const productList = document.getElementById("product-list");
    const categoryButtons = document.querySelectorAll(".blade-sidebar a");
    const categoryInputs = document.querySelectorAll(".category-input");

    // üü¢ Danh s√°ch danh m·ª•c (map key -> {categoryId, type})
    const categoryMap = {
        "T·∫•t c·∫£": { categoryId: 3, type: "" },
        "Butterfly": { categoryId: 3, type: "Butterfly" },
        "DHS": { categoryId: 3, type: "DHS" },
        "Stiga": { categoryId: 3, type: "Stiga" },
        "Yasaka": { categoryId: 3, type: "Yasaka" },
        "Donic": { categoryId: 3, type: "Donic" },
        "Nitaku": { categoryId: 3, type: "Nitaku" },
        "Andro": { categoryId: 3, type: "Andro" }
    };

    // üü¢ M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã s·∫£n ph·∫©m "T·∫•t c·∫£" khi trang load
    window.onload = () => fetchProducts("T·∫•t c·∫£");

    // üü¢ X·ª≠ l√Ω s·ª± ki·ªán khi click v√†o n√∫t danh m·ª•c
    categoryButtons.forEach(button => {
        button.addEventListener("click", (event) => {
            event.preventDefault();
            fetchProducts(button.getAttribute("data-category"));
        });
    });

    // üü¢ X·ª≠ l√Ω khi ch·ªçn danh m·ª•c b·∫±ng radio button (n·∫øu c·∫ßn)
    categoryInputs.forEach(input => {
        input.addEventListener("change", function () {
            fetchProducts(this.id);
        });
    });

    // üü¢ H√†m g·ªçi API l·∫•y s·∫£n ph·∫©m theo danh m·ª•c v√† type
    async function fetchProducts(categoryKey) {
        try {
            const categoryData = categoryMap[categoryKey];
            if (!categoryData) {
                throw new Error("Danh m·ª•c kh√¥ng h·ª£p l·ªá!");
            }

            console.log(`üì¢ ƒêang t·∫£i s·∫£n ph·∫©m cho danh m·ª•c: ${categoryKey} (ID: ${categoryData.categoryId}, Type: ${categoryData.type})`);

            let url = `http://localhost:3000/products/by-category?category_id=${categoryData.categoryId}`;
            if (categoryData.type) {
                url += `&type=${categoryData.type}`;
            }

            const response = await fetch(url);

            if (!response.ok) {
                const contentType = response.headers.get("content-type");
                if (contentType && contentType.includes("application/json")) {
                    const errorData = await response.json();
                    throw new Error(`L·ªói API: ${response.status} ${response.statusText} - ${errorData.message || "Kh√¥ng c√≥ th√¥ng tin l·ªói chi ti·∫øt"}`);
                } else {
                    const errorText = await response.text();
                    throw new Error(`L·ªói API: ${response.status} ${response.statusText} - ${errorText}`);
                }
            }

            const contentType = response.headers.get("content-type");
            if (contentType && contentType.includes("application/json")) {
                const products = await response.json();
                console.log("üì¶ D·ªØ li·ªáu s·∫£n ph·∫©m nh·∫≠n ƒë∆∞·ª£c:", products);

                if (products.length === 0) {
                    productList.innerHTML = `<p class="no-products">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong danh m·ª•c n√†y!</p>`;
                } else {
                    productList.innerHTML = products.map(product => `
                        <div class="product-card">
                            <img src="${product.image_url ? `http://localhost:3000/images/${product.image_url}` : './assets/imgs/no-image.png'}" alt="${product.product_name}">
                            <h3>${product.product_name}</h3>
                            <p>${parseInt(product.price).toLocaleString()} VND</p>
                            <p>T·ªìn kho: ${product.stock}</p>
                            <button class="buy-btn">Mua ngay</button>
                        </div>
                    `).join('');
                }
            } else {
                const responseText = await response.text();
                console.error("‚ùå Ph·∫£n h·ªìi kh√¥ng ph·∫£i JSON:", responseText);
                productList.innerHTML = `<p class="error-message">L·ªói: Ph·∫£n h·ªìi t·ª´ server kh√¥ng h·ª£p l·ªá.</p>`;
            }

        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m:", error);
            productList.innerHTML = `<p class="error-message">${error.message || "L·ªói khi t·∫£i s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i!"}</p>`;
        }
    }
});